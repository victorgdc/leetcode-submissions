{"id":985728799,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1688431690,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/985728799/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"14.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        \n        ListNode* listm = new ListNode(-1);\n        ListNode* pointer = listm;\n\n        if (list1 == NULL) return list2;\n        else if (list2 == NULL) return list1;\n\n        while (list1 != NULL && list2 != NULL) {\n            if (list1->val <= list2->val) {\n                pointer->next = new ListNode(list1->val);\n                pointer = pointer->next;\n                list1 = list1->next;\n            } \n            else {\n                pointer->next = new ListNode(list2->val);\n                pointer = pointer->next;\n                list2 = list2->next;\n            }\n        }\n\n        while (list1 != NULL) {\n            pointer->next = new ListNode(list1->val);\n            pointer = pointer->next;\n            list1 = list1->next;\n        }\n\n        while (list2 != NULL) {\n            pointer->next = new ListNode(list2->val);\n            pointer = pointer->next;\n            list2 = list2->next;\n        }\n\n        return listm->next;        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false,"flag_type":1}