{"id":1032689414,"lang":"cpp","lang_name":"C++","time":"2 weeks, 1 day","timestamp":1693097856,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1032689414/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        \n        if (root == NULL) return true;\n\n        if (root->left != NULL) {\n            int max = -1e5;\n            maxValue(root->left, max);\n            cout << max << endl;\n            if (max >= root->val) return false;\n        }\n        if (root->right != NULL) {\n            int min = 1e5;\n            minValue(root->right, min);\n            if (min <= root->val) return false;\n        }\n\n        return true;\n    }\n    void maxValue(TreeNode* root, int& val) {\n        if (root == NULL) return;\n        if (root->val > val) val = root->val;\n\n        maxValue(root->left, val);\n        maxValue(root->right, val);\n    }\n    void minValue(TreeNode* root, int& val) {\n        if (root == NULL) return;\n        if (root->val < val) {\n            val = root->val;\n        }\n\n        minValue(root->left, val);\n        minValue(root->right, val);\n    }\n};","compare_result":"11111111111110111110111111111111111111111011111110101100100111111111111101101111101","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}