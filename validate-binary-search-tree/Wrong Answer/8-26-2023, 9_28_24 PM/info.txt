{"id":1032679689,"lang":"cpp","lang_name":"C++","time":"2 weeks, 1 day","timestamp":1693096104,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1032679689/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        \n        if (root == NULL) return true;\n        if (root->right != NULL && root->right->val <= root->val) return false;\n        if (root->left != NULL && root->left->val >= root->val) return false;\n\n        bool left = isValidBST(root->left);\n        bool right = isValidBST(root->right);\n\n        if (left == false || right == false) return false;\n\n        return true;\n    }\n};","compare_result":"11111111111100100100111111111111111111111111111111111111111111111111111110111110111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}