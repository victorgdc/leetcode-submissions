{"id":987354375,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1688603282,"status":10,"status_display":"Accepted","runtime":"38 ms","url":"/submissions/detail/987354375/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"23.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if (root->val > p->val && root->val > q->val) \n            {return lowestCommonAncestor(root->left, p, q);}\n        else if (root->val < p->val && root->val < q->val) \n            {return lowestCommonAncestor(root->right, p, q);}\n        else \n            {return root;}\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false,"flag_type":1}