{"id":905617942,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1677460671,"status":10,"status_display":"Accepted","runtime":"556 ms","url":"/submissions/detail/905617942/","is_pending":"Not Pending","title":"Find Original Array From Doubled Array","memory":"150.7 MB","code":"class Solution {\npublic:\n    vector<int> findOriginalArray(vector<int>& changed) {\n        \n        if (changed.size() % 2) return vector<int>{};\n\n        vector<int> original;\n        unordered_map<int, int> hash;\n\n        for (int i = 0; i < changed.size(); i++) {\n            if (hash.find(changed[i]) == hash.end()) hash[changed[i]] = 0;\n            hash[changed[i]]++;\n        }\n\n        sort(changed.begin(), changed.end());\n\n        for (int i = 0; i < changed.size(); i++) {\n            if (changed[i] == 0 && hash[0] >= 2) {\n                hash[0] -= 2;\n                original.push_back(0);\n            }\n            else if (changed[i] > 0 && hash[changed[i]] > 0 && hash[changed[i]*2] > 0) {\n                hash[changed[i]]--;\n                hash[changed[i]*2]--;\n                original.push_back(changed[i]);\n            } \n        }\n\n        return (original.size() == changed.size()/2) ? original : vector<int>{};\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-original-array-from-doubled-array","has_notes":false,"flag_type":1}