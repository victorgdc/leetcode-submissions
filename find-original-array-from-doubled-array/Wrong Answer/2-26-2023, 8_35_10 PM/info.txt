{"id":905589811,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1677454510,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/905589811/","is_pending":"Not Pending","title":"Find Original Array From Doubled Array","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> findOriginalArray(vector<int>& changed) {\n        vector<int> original;\n        unordered_set<int> set;\n        unordered_map<int, bool> hash;\n        bool valid = true;\n\n        for (int i = 0; i < changed.size(); i++) {\n            set.insert(changed[i]);\n        }\n\n        for (int i = 0; i < changed.size(); i++) {\n            if (changed[i]%2 == 1) {\n                if (set.find(changed[i]*2) == set.end()) {valid = false; break;}\n                hash[changed[i]] = false;\n                hash[changed[i]*2] = true;\n            }\n            else {\n                if (hash.find(changed[i]) != hash.end()) continue;\n                if (set.find(changed[i]/2) != set.end() && hash.find(changed[i]/2) == hash.end()) {\n                    hash[changed[i]/2] = false;\n                    hash[changed[i]] = true;\n                }\n                else if (set.find(changed[i]*2) != set.end() && hash.find(changed[i]*2) == hash.end()) {\n                    hash[changed[i]] = false;\n                    hash[changed[i]*2] = true;\n                }\n                else {valid = false; break;}\n            }\n        }\n\n        if (valid) {\n            for (auto x: hash) {\n                if (x.second == false) original.push_back(x.first);\n            }\n        }\n\n        return original;\n    }\n};","compare_result":"11110111110001011111110110111111111111111111101101111110111000000100000001111111111111111111111111111110111111111010000100010000000101111111111111111111110000000000111110011110011","title_slug":"find-original-array-from-doubled-array","has_notes":false,"flag_type":1}