{"id":1032664036,"lang":"cpp","lang_name":"C++","time":"2 weeks, 2 days","timestamp":1693093318,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/1032664036/","is_pending":"Not Pending","title":"Min Stack","memory":"16.5 MB","code":"class MinStack {\npublic:\n\n    struct node {\n        int val;\n        int minuntilnow;\n    };\n\n    int globalmin;\n    stack<node*> s;\n\n    MinStack() {\n        this->globalmin = 1e5;\n    }\n    \n    void push(int val) {\n        \n        node* n = new node;\n        n->val = val;\n        \n        if (this->s.empty()) {\n            n->minuntilnow = val;\n            this->globalmin = val;\n        }\n        else {\n            if (val < this->globalmin) {\n                this->globalmin = val;\n                n->minuntilnow = val;\n            }\n            else {\n                n->minuntilnow = this->globalmin;\n            }\n        }\n        this->s.push(n);\n    }\n    \n    void pop() {\n        this->s.pop();\n        this->globalmin = 1e5;\n        if (!s.empty()) {\n            this->globalmin = (this->s.top())->minuntilnow;\n        }\n    }\n    \n    int top() {\n        return (this->s.top())->val;\n    }\n    \n    int getMin() {\n        return (this->s.top())->minuntilnow;\n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj->push(val);\n * obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->getMin();\n */","compare_result":"1111111111111111111111111111111","title_slug":"min-stack","has_notes":false,"flag_type":1}