{"id":908601671,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1677886331,"status":10,"status_display":"Accepted","runtime":"187 ms","url":"/submissions/detail/908601671/","is_pending":"Not Pending","title":"Maximum Score of a Good Subarray","memory":"89.5 MB","code":"class Solution {\npublic:\n    int maximumScore(vector<int>& nums, int k) {\n       int left, right, ln, rn; \n       left = right = k;\n       int min, ans; \n       min = ans = nums[k];\n       int n = nums.size();\n\n       while (left > 0 || right < n-1) {\n\n            while (left > 0 && nums[left-1] >= min) left--;\n            while (right < n-1 && nums[right+1] >= min) right++;\n\n            ans = max(ans, (right - left + 1) * min);\n\n            ln = (left > 0) ? nums[left-1] : -1;\n            rn = (right < n-1) ? nums[right+1] : -1;\n\n            min = max (ln, rn);\n       }\n\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-score-of-a-good-subarray","has_notes":false,"flag_type":1}