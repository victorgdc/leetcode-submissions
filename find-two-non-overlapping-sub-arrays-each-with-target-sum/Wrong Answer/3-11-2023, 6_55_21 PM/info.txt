{"id":913434576,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1678571721,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/913434576/","is_pending":"Not Pending","title":"Find Two Non-overlapping Sub-arrays Each With Target Sum","memory":"N/A","code":"class Solution {\npublic:\n    int minSumOfLengths(vector<int>& arr, int target) {\n\n        int sum = 0;\n        int start = 0;\n        int n = arr.size();\n        int window;\n        vector<int> mins;\n\n        for (int i = 0; i < n; i++) {\n            sum += arr[i];\n\n            while (sum > target) {\n                sum -= arr[start];\n                start++;\n            }\n            if (sum == target) {\n                window = i - start + 1;\n                mins.push_back(window);\n                while (start <= i) {\n                    sum -= arr[start];\n                    start++;\n                }\n            }\n\n        }\n\n        sort(mins.begin(), mins.end());\n\n        return (mins.size() < 2) ? -1 : (mins[0] + mins[1]);\n        \n\n    }\n};","compare_result":"1111111111111111101111111111111111111111110111111111111101111","title_slug":"find-two-non-overlapping-sub-arrays-each-with-target-sum","has_notes":false,"flag_type":1}