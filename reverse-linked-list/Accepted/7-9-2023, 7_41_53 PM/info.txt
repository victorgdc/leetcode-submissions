{"id":990504322,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1688942513,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/990504322/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"8.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        ListNode* p, *q, *r;\n        \n        if (head == NULL) return head;\n        p = head;\n        if (p->next == NULL) return p;\n\n        q = p->next;\n        r = q->next;\n        p->next = NULL;\n\n        while (r != NULL) {\n            q->next = p;\n            p = q;\n            q = r;\n            r = r->next;\n        }\n        q->next = p;\n        head = q;\n\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}