{"id":1023227023,"lang":"cpp","lang_name":"C++","time":"3 weeks, 5 days","timestamp":1692206524,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/1023227023/","is_pending":"Not Pending","title":"Course Schedule","memory":"13.8 MB","code":"class Solution {\npublic:\n    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {\n        vector<vector<int>> adj(numCourses);\n        unordered_map<int, int> indegree;\n        stack<int> queue;\n\n        for (int i = 0; i < numCourses; i++) {\n            indegree[i] = 0;\n        }\n\n        for (int i = 0; i < prerequisites.size(); i++) {\n            int ori = prerequisites[i][1];\n            int dest = prerequisites[i][0];\n            adj[ori].push_back(dest);\n            indegree[dest]++;\n        }\n\n        for (auto& i: indegree) {\n            if (i.second == 0) queue.push(i.first);\n        }\n\n        if (queue.empty()) return false;\n    \n        while(!queue.empty()) {\n            int cur = queue.top(); queue.pop();\n\n            for (int i = 0; i < adj[cur].size(); i++) {\n                int neighbor = adj[cur][i]; \n                indegree[neighbor]--;\n                if (indegree[neighbor] == 0) queue.push(adj[cur][i]);\n            } \n        \n        }\n\n        for (auto &i: indegree) {\n            if (i.second > 0) return false;\n        }\n\n        return true;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"course-schedule","has_notes":false,"flag_type":1}