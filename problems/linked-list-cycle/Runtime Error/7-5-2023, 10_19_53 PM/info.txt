{"id":987372221,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1688606393,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/987372221/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        \n        ListNode* p = head, *q = head;\n\n        while (true) {\n            if (p->next == NULL) break;\n            p = p->next;\n            if (q->next == NULL || q->next->next == NULL) break;\n            q = q->next->next;\n            if (p == q) return true;\n        }\n        \n        return false;\n    }\n};","compare_result":"11100000000000000000000","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}