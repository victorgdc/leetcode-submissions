{"id":903151269,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1677100469,"status":10,"status_display":"Accepted","runtime":"302 ms","url":"/submissions/detail/903151269/","is_pending":"Not Pending","title":"Find All Possible Recipes from Given Supplies","memory":"102.1 MB","code":"class Solution {\npublic:\n    vector<string> findAllRecipes(vector<string>& recipes, vector<vector<string>>& ingredients, vector<string>& supplies) {\n\n        unordered_map<string, vector<string>> graph;\n        unordered_set<string> stock;\n        unordered_map<string, int> indegree;\n        vector<string> answer;\n        int nrec = recipes.size();\n\n        for (auto x : supplies) stock.insert(x);\n        for (auto x : recipes) indegree[x] = 0;\n\n        for (int i = 0; i < nrec; i++) {\n            for (int j = 0; j < ingredients[i].size(); j++) {\n                if (stock.find(ingredients[i][j]) == stock.end()) {\n                    graph[ingredients[i][j]].push_back(recipes[i]);\n                    indegree[recipes[i]]++;\n                }\n            }\n        } \n\n        queue<string> q;\n\n        for (auto x : recipes) {\n            if (indegree[x] == 0) q.push(x);\n        }\n\n        while (!q.empty()) {\n\n            string tmp = q.front();\n            q.pop();\n            answer.push_back(tmp);\n\n            for (auto x: graph[tmp]) {\n                indegree[x]--;\n                if (indegree[x] == 0) q.push(x);\n            }\n\n        }\n\n        return answer;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-all-possible-recipes-from-given-supplies","has_notes":false,"flag_type":1}