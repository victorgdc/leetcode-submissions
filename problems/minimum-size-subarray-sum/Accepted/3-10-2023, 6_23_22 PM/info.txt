{"id":912906518,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1678483402,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/912906518/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"28.3 MB","code":"class Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n\n        int sum = 0;\n        int n = nums.size();\n        int start = 0;\n        int min = INT_MAX;\n\n        for (int i = 0; i < n; i++) {\n            sum += nums[i];\n\n            while (start <= i && sum >= target) {\n                if ((i - start + 1) < min) min = i - start + 1;\n                sum -= nums[start];\n                start++;\n            }\n            \n        }\n\n        return (min == INT_MAX) ? 0 : min;\n    }\n};","compare_result":"11111111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}