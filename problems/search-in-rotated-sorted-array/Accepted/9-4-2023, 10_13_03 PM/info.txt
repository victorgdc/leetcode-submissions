{"id":1040794534,"lang":"cpp","lang_name":"C++","time":"6 days, 22 hours","timestamp":1693876383,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1040794534/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"12.8 MB","code":"class Solution {\npublic:\n    int search(vector<int>& nums, int target) {\n        int k = 0;\n        int n = nums.size();\n\n        for (int b = n/2; b >= 1; b /= 2) {\n            while (k+b < n && nums[k+b] > nums[0]) k += b;\n        }\n\n        int left = binarySearch(nums, target, 0, k);\n        int right = binarySearch(nums, target, k+1, n-1);\n\n        return left != -1 ? left : right;\n    }\n\n    int binarySearch(vector<int> nums, int target, int l, int r) {\n        if (l > r) return -1;\n\n        int m = (l+r)/2;\n\n        if(nums[m] > target) {\n            return binarySearch(nums, target, l, m-1);\n        } \n        else if (nums[m] < target) {\n            return binarySearch(nums, target, m+1, r);\n        }\n        else return m;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array","has_notes":false,"flag_type":1}