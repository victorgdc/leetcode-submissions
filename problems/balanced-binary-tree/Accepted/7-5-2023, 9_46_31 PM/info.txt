{"id":987360568,"lang":"cpp","lang_name":"C++","time":"2Â months, 1Â week","timestamp":1688604391,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/987360568/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"21 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isBalanced(TreeNode* root) {\n        \n        return checkDepth(root, 0) == -1 ? false : true;\n\n    }\n\n    int checkDepth(TreeNode* root, int d) {\n\n        if (root == NULL) return 0;\n        int dl = checkDepth(root->left, d);\n        int dr = checkDepth(root->right, d);\n        \n        if (dl == -1 || dr == -1 || abs(dl-dr)>1) return -1;\n        \n        if (dl > dr) return dl+1;\n        else return dr+1;\n\n    }\n\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}