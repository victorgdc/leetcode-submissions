{"id":992729859,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1689172050,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/992729859/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* middleNode(ListNode* head) {\n        int tam = 0;\n        int i = 0;\n        ListNode* p = head;\n\n        while (p != NULL) {\n            tam++;\n            p = p->next;\n        }\n        tam = tam/2;\n        p = head;\n\n        while (i != tam) {\n            i++;\n            p = p->next;\n        }\n        \n        return p;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false,"flag_type":1}