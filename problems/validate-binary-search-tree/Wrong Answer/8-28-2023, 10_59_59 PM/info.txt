{"id":1034614827,"lang":"cpp","lang_name":"C++","time":"1 week, 6 days","timestamp":1693274399,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1034614827/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        return valid(root, -1e5, 1e5);\n    }\n\n    bool valid(TreeNode* root, int left, int right) {\n        if (root == NULL) return true;\n\n        if (root->val <= left || root->val >= right) return false;\n\n        return valid(root->left, left, root->val) && valid(root->right, root->val, right); \n    }\n\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111110011110101011100111101","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}