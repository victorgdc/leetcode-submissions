{"id":987365260,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1688605202,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/987365260/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        unordered_map<int, int> hash;\n\n        while (true) {\n            hash[head->val]++;\n            if (hash[head->val] == 2) return true;\n            if (head->next == NULL) break;\n            head = head->next;\n        }\n\n        return false;\n    }\n};","compare_result":"11100000000000000000000","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}