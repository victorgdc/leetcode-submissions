{"id":987372440,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1688606428,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/987372440/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"8.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        \n        ListNode* p = head, *q = head;\n\n        if (head != NULL){\n            while (true) {\n                if (p->next == NULL) break;\n                p = p->next;\n                if (q->next == NULL || q->next->next == NULL) break;\n                q = q->next->next;\n                if (p == q) return true;\n            }\n        }\n        \n        return false;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}