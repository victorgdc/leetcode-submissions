{"id":904981111,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1677375280,"status":10,"status_display":"Accepted","runtime":"313 ms","url":"/submissions/detail/904981111/","is_pending":"Not Pending","title":"Detect Squares","memory":"93.3 MB","code":"class DetectSquares {\nprivate:\nmap<pair<int, int>, int> map;\npublic:\n    // unordered_map<vector<int>, int> map;\n\n    DetectSquares() {\n\n    }\n    \n    void add(vector<int> point) {\n        int x = point[0];\n        int y = point[1];\n        if (map.find({x, y}) == map.end()) map[{x, y}] = 0;\n        map[{x, y}]++;    \n    }\n    \n    int count(vector<int> point) {\n        int x = point[0];\n        int y = point[1];\n\n        int result = 0;\n        for (auto p: map) {\n            if (abs(p.first.first - x) != abs(p.first.second - y) || p.first.first == x || p.first.second == y) continue; \n            if (map.find({p.first.first, y}) == map.end() || map.find({x, p.first.second}) == map.end()) continue;\n\n            result += map[p.first] * map[{p.first.first, y}] * map[{x, p.first.second}];\n        }\n        return result;\n    }\n};\n\n/**\n * Your DetectSquares object will be instantiated and called as such:\n * DetectSquares* obj = new DetectSquares();\n * obj->add(point);\n * int param_2 = obj->count(point);\n */","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"detect-squares","has_notes":false,"flag_type":1}