{"id":986575992,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1688524148,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/986575992/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"9.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        \n        if (root == NULL) return NULL;\n\n        TreeNode* temp;\n        temp = invertTree(root->left);\n        root->left = invertTree(root->right);\n        root->right = temp;\n\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false,"flag_type":1}